{"version":3,"sources":["PredictionChart.tsx","Onboarding.tsx","Storage.ts","Prediction.tsx","Dashboard.tsx","DailyNewDeaths.tsx","DeathsPerMillion.tsx","TestsPerCountry.tsx","ConfirmedPerCountry.tsx","SpeedOfGrowth.tsx","SymptomsAndFatality.tsx","EpidemicCalculator.tsx","Analysis.tsx","AddTabDialog.tsx","GenericTab.tsx","App.tsx","index.tsx"],"names":["PredictionChart","labelsPlot","dataExistingPlot","dataPredictedPlot","country","color","pageWidth","document","body","getBoundingClientRect","width","pageHeight","height","console","info","scrollDiv","commonLineStyle","backgroundColor","borderColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointBackgroundColor","fill","lineTension","borderCapStyle","borderDashOffset","borderJoinStyle","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointHitRadius","pastLineStyle","borderDash","pointRadius","predictionLineStyle","css","plugins","afterDraw","scrollTo","className","ref","el","data","labels","datasets","label","legend","options","maintainAspectRatio","scales","yAxes","type","display","position","id","gridLines","show","Onboardings","Onboarding","run","STEPS","MAIN","target","content","placement","USER_TABS_ACTIONS","steps","continuous","showSkipButton","locale","back","close","last","next","skip","styles","zIndex","callback","status","STATUS","FINISHED","SKIPPED","includes","storageState","getStorageState","saveStorageState","watchedOnboardings","_","uniq","getCookie","name","nameEQ","ca","cookie","split","i","length","c","charAt","substring","indexOf","store","get","isMigrated","tabMain","Number","userTabs","JSON","parse","decodeURIComponent","tabAnalysis","prediction","set","stringify","shouldWatchOboarding","onboarding","isAlreadyWatched","octokit","Octokit","require","useStyles","makeStyles","theme","createStyles","root","marginLeft","margin","spacing","textAlign","formControl","minWidth","footer","opacity","latestUpdate","chart","infoIcon","palette","grey","A200","paddingTop","Prediction","classes","types","daysMapping","storage","useState","setLabels","setCountry","dataType","setDataType","countries","setCountries","days","setDays","setData","lastUpdate","setLastUpdate","inputCountryLabel","React","useRef","labelCountryWidth","setLabelCountryWidth","inputDaysLabel","labelDaysWidth","setLabelDaysWidth","inputDataTypeLabel","labelDataTypeWidth","setLabelDataTypeWidth","useEffect","current","offsetWidth","handleCountryChange","event","newCountry","value","ReactGA","category","action","handleDaysChange","newRange","findKey","handleDataTypeChange","newType","Papa","toLowerCase","skipEmptyLines","header","download","delimiter","complete","results","map","slice","keys","strDate","moment","add","toDate","concat","sortBy","row","repos","listCommits","owner","repo","then","x","latestCommitTime","values","fromNow","Grid","container","direction","justify","alignItems","item","FormControl","variant","InputLabel","Select","labelId","onChange","labelWidth","index","MenuItem","key","nextDayPrediction","allDays","currentDate","format","lastPart","mults","reduce","acc","previousValue","isNaN","remove","filter","avgMult","mean","range","v","Math","round","zipLabelsWithValues","dateLabels","zipObject","buildPrediction","labelsNormalized","existingData","predictionAcc","take","date","nextDayPredicted","findIndex","undefined","startingDay","Date","now","buildNextDaysLabels","dataPerCountry","countryToCheck","casesSelection","String","sum","find","isComplexRegion","region","state","getCasesPerCountry","indexOfFirstPacient","accuracy","deviationsAll","zipWith","existing","predicted","biggerVal","max","smallerVal","min","abs","rangeStart","deviations","calculateAccuracy","NaN","predictionTomorrow","findLast","Typography","ReactHtmlParser","lowerCase","Tooltip","title","arrow","TransitionComponent","Fade","buildChart","OutboundLink","eventLabel","to","Dashboard","src","style","border","marginTop","DailyNewDeaths","xs","DeathsPerMillion","rootBottom","marginBottom","TestsPerCountry","ConfirmedPerCountry","SpeedOfGrowth","paddingLeft","paddingRight","img","SymptomsAndFatality","Container","alt","Divider","EpidemicCalculator","Analysis","tabsUseStyles","setValue","buildTabTitle","selected","Tab","onClick","handleTabClick","tabSelected","tabDefault","AppBar","Tabs","newValue","scrollButtons","ind","TabPanel","textSuccess","success","dark","textError","error","saveButton","primary","DialogTitle","withStyles","padding","closeButton","right","top","props","children","onClose","other","disableTypography","IconButton","aria-label","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","Transition","forwardRef","Slide","countryToEmojiMap","emojiFlags","flag","emoji","AddTabDialog","isOpen","editTab","handleSave","handleClose","handleEdit","handleRemove","validUrl","setValidUrl","url","setUrl","loading","setLoading","resetState","onDialogClosed","handleCountrySelected","Dialog","aria-labelledby","open","fullWidth","dividers","minHeight","Zoom","in","role","Autocomplete","defaultValue","autoHighlight","onSelect","getOptionLabel","option","renderOption","renderInput","params","TextField","inputProps","autoComplete","fetch","method","res","ok","err","setTimeout","unmountOnExit","transitionDelay","CircularProgress","size","Button","GenericTab","component","hidden","Box","p","contrastText","main","secondary","App","mainTab","setMainTab","setUserTabsRaw","setEditTab","showAddTabDialog","setShowAddTabDialog","userTabsTitles","tabsDefault","tabs","handleAddTabClose","preventDefault","window","userTabsStyles","fontSize","onContextMenu","aria-haspopup","newTab","timestamp","unix","userTabsObj","tab","newTabs","initialize","pageview","location","pathname","createMuiTheme","ReactDOM","render","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.c97ff782.chunk.js","sourcesContent":["import React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nexport default function PredictionChart({labelsPlot, dataExistingPlot, dataPredictedPlot, country, color}: { labelsPlot: string[], dataExistingPlot: number[], dataPredictedPlot: number[], country: string, color: string }) {\n    const pageWidth = document.body.getBoundingClientRect().width;\n    const pageHeight = document.body.getBoundingClientRect().height;\n    console.info(pageWidth, pageHeight)\n    const commonLineStyle = {\n        backgroundColor: color + 'AA',\n        borderColor: color,\n        pointBorderColor: color,\n        pointHoverBackgroundColor: color,\n        pointHoverBorderColor: color + '33',\n        pointBackgroundColor: '#fff',\n        fill: false,\n        lineTension: 0.1,\n        borderCapStyle: 'butt',\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderWidth: 1,\n        pointHoverRadius: 10,\n        pointHoverBorderWidth: 2,\n        pointHitRadius: 10\n    };\n    const pastLineStyle = {...commonLineStyle, borderDash: [], pointRadius: 3};\n    const predictionLineStyle = {\n        ...commonLineStyle,\n        borderDash: [5, 2],\n        pointRadius: 2,\n        backgroundColor: '#000AA',\n        borderColor: '#2196f3',\n        pointHoverRadius: 5,\n        pointBorderColor: '#2196f3',\n        pointHoverBackgroundColor: '#2196f3',\n        pointHoverBorderColor: '#00033'\n    };\n    const css = `\n        .chartWrapper {\n          position: relative;\n        }\n        .chartWrapper > canvas {\n          position: absolute;\n          left: 0;\n          top: 0;\n          pointer-events: none;\n        }\n        .chartAreaWrapper {\n          width: ${pageWidth - 120}px;\n          overflow-x: scroll;\n        }\n        .chartAreaWrapper2 {\n          width: ${pageWidth * 2}px!important;\n        }\n        `\n    const options = {\n        maintainAspectRatio: false,\n        scales: {\n            yAxes: [\n                {\n                    type: 'linear',\n                    display: true,\n                    position: 'right',\n                    id: 'y-axis-1',\n                    gridLines: {\n                        display: false\n                    },\n                    labels: {\n                        show: true\n                    }\n                }\n            ]\n        }\n    };\n    // noinspection JSUnusedGlobalSymbols\n    const plugins = [{\n        afterDraw: () => {\n            scrollDiv?.scrollTo(pageWidth * 2, 0)\n        }\n    }];\n    let scrollDiv: HTMLDivElement | null;\n    return <div>\n        <style>\n            {css}\n        </style>\n        <div className=\"chartWrapper\">\n            <div className=\"chartAreaWrapper\" ref={(el) => {\n                scrollDiv = el;\n            }}>\n                <div className=\"chartAreaWrapper2\">\n                    <Line data={{\n                        labels: labelsPlot,\n                        datasets: [\n                            {...pastLineStyle, label: country, data: dataExistingPlot},\n                            {\n                                ...predictionLineStyle,\n                                label: country + ' (predicted)',\n                                data: dataPredictedPlot\n                            }\n                        ]\n                    }} legend={null} height={pageWidth / 2.88} plugins={plugins} options={options}/>\n                </div>\n            </div>\n        </div>\n    </div>;\n}","import Joyride, {STATUS, Step} from \"react-joyride\";\nimport React from \"react\";\nimport {getStorageState, saveStorageState} from \"./Storage\";\nimport _ from \"lodash\";\n\nexport enum Onboardings {\n    MAIN, USER_TABS_ACTIONS\n}\n\nexport function Onboarding({run, type}: { run: boolean, type: Onboardings }) {\n    const STEPS = {\n        MAIN: [\n            {\n                target: 'body',\n                content: <p>This website lets you keep all the info about the COVID-19 world\n                    situation\n                    in a single place. <strong>Trusted data source. Daily updates.</strong>\n                </p>,\n                placement: 'center',\n            },\n            {\n                target: '.simple-tab-0',\n                content: <p><u>Dashboard</u> has the most reliable <strong>map that contains all\n                    countries</strong>' data.</p>,\n            },\n            {\n                target: '.simple-tab-1',\n                content: <p><u>Analysis</u> has <strong>detailed charts</strong> with granularly\n                    picked\n                    scientific data.</p>,\n            },\n            {\n                target: '.simple-tab-2',\n                content: <p><u>Prediction</u> chart shows <strong>how the disease will\n                    spread</strong> in each country.</p>,\n            },\n            {\n                target: '.simple-tab-last',\n                content: <p>You can <strong>add the URL of the website you frequently\n                    check</strong> and\n                    it will be saved as an icon in the top bar of this page.</p>,\n            },\n        ] as Step[],\n        USER_TABS_ACTIONS: [\n            {\n                target: '.simple-tab-3',\n                content: <p>Now you can click the right button of the mouse\n                    to <strong>edit</strong> or <strong>remove</strong> the tab you previously\n                    created.</p>,\n            }\n        ] as Step[]\n    }\n\n    const handleJoyrideCallback = (data: { status: any; }) => {\n        const {status} = data;\n\n        if ([STATUS.FINISHED, STATUS.SKIPPED].includes(status)) {\n            const storageState = getStorageState();\n            saveStorageState({\n                ...storageState,\n                watchedOnboardings: _.uniq([...storageState.watchedOnboardings, type])\n            })\n        }\n    };\n\n\n    let steps = STEPS.MAIN;\n    if (type === Onboardings.USER_TABS_ACTIONS) {\n        steps = STEPS.USER_TABS_ACTIONS;\n    }\n    return <Joyride continuous={true} run={run} showSkipButton={true} steps={steps}\n                    locale={{\n                        back: 'Back',\n                        close: 'Close',\n                        last: 'OK',\n                        next: 'Next',\n                        skip: 'Skip'\n                    }}\n                    styles={{options: {zIndex: 10000}}} callback={handleJoyrideCallback}/>;\n}","import store from \"store\";\nimport {Onboardings} from \"./Onboarding\";\nimport _ from \"lodash\";\n\nexport interface StorageState {\n    readonly isMigrated: boolean,\n    readonly tabMain: number,\n    readonly userTabs: UserTab[],\n    readonly tabAnalysis: number,\n    readonly country: string,\n    readonly prediction: number,\n    readonly type: string,\n    readonly watchedOnboardings: number[],\n}\n\nexport interface UserTab {\n    readonly index: number,\n    readonly country: string,\n    readonly flag: string,\n    readonly url: string,\n    readonly timestamp: number\n}\n\nconst IS_MIGRATED = 'is-mimgrated';\nconst TAB_MAIN = 'tab-main';\nconst USER_TABS = 'user-tabs';\nconst TAB_ANALYSIS = 'tab-analysis';\nconst COUNTRY = 'country';\nconst PREDICTION = 'prediction';\nconst TYPE = 'type';\nconst WATCHED_ONBOARDINGS = 'watched-onboardings';\n\nexport function getStorageState() {\n    function getCookie(name: string) {\n        let nameEQ = name + \"=\";\n        let ca = document.cookie.split(';');\n        for (let i = 0; i < ca.length; i++) {\n            let c = ca[i];\n            while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n        }\n        return null;\n    }\n\n    function rebuildStorageFromCookies() {\n        saveStorageState({\n            isMigrated: true,\n            tabMain: Number(getCookie(TAB_MAIN) || 0),\n            userTabs: JSON.parse((decodeURIComponent(getCookie(USER_TABS) || '[]'))) as UserTab[],\n            tabAnalysis: Number(getCookie(TAB_ANALYSIS) || 0),\n            country: getCookie(COUNTRY) || 'Worldwide',\n            prediction: Number(getCookie(PREDICTION) || 1),\n            type: getCookie(TYPE) || 'Confirmed',\n            watchedOnboardings: []\n        } as StorageState)\n    }\n\n    if (getCookie(TAB_MAIN) && !store.get(IS_MIGRATED)) {\n        rebuildStorageFromCookies()\n    }\n    return {\n        isMigrated: store.get(IS_MIGRATED, false),\n        tabMain: store.get(TAB_MAIN, 0),\n        userTabs: JSON.parse(store.get(USER_TABS, '[]')) as UserTab[],\n        tabAnalysis: store.get(TAB_ANALYSIS, 0),\n        country: store.get(COUNTRY, 'Worldwide'),\n        prediction: store.get(PREDICTION, 1),\n        type: store.get(TYPE, 'Confirmed'),\n        watchedOnboardings: store.get(WATCHED_ONBOARDINGS, []),\n    } as StorageState;\n}\n\nexport function saveStorageState(data: StorageState) {\n    store.set(IS_MIGRATED, data.isMigrated);\n    store.set(TAB_MAIN, data.tabMain);\n    store.set(USER_TABS, JSON.stringify(data.userTabs));\n    store.set(TAB_ANALYSIS, data.tabAnalysis);\n    store.set(COUNTRY, data.country);\n    store.set(PREDICTION, data.prediction);\n    store.set(TYPE, data.type);\n    store.set(WATCHED_ONBOARDINGS, data.watchedOnboardings);\n}\n\nexport function shouldWatchOboarding(onboarding: Onboardings): boolean {\n    const isAlreadyWatched = _.indexOf(getStorageState().watchedOnboardings, onboarding) >= 0;\n    if (onboarding === Onboardings.MAIN) {\n        return !isAlreadyWatched\n    } else if (onboarding === Onboardings.USER_TABS_ACTIONS) {\n        return !isAlreadyWatched && !shouldWatchOboarding(Onboardings.MAIN)\n    }\n    return false\n}\n\n\n","import React, {useEffect, useState} from 'react';\nimport Papa from 'papaparse';\nimport PredictionChart from \"./PredictionChart\";\nimport {\n    Fade,\n    FormControl,\n    Grid,\n    InputLabel,\n    MenuItem,\n    Select,\n    Tooltip,\n    Typography\n} from \"@material-ui/core\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport _, {Dictionary} from \"lodash\";\nimport ReactGA from 'react-ga';\nimport moment from \"moment\";\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\nimport ReactHtmlParser from 'react-html-parser';\nimport {getStorageState, saveStorageState} from \"./Storage\";\n\nconst {Octokit} = require(\"@octokit/rest\");\nconst octokit = new Octokit();\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            marginLeft: 0,\n            margin: theme.spacing(2),\n            textAlign: 'center'\n        },\n        formControl: {\n            margin: theme.spacing(2),\n            minWidth: 100,\n        },\n        footer: {\n            opacity: 0.5\n        },\n        latestUpdate: {\n            opacity: 0.5\n        },\n        chart: {\n            width: '90%'\n        },\n        infoIcon: {\n            color: theme.palette.grey.A200,\n            height: theme.spacing(2),\n            width: theme.spacing(2),\n            paddingTop: theme.spacing(1),\n            marginLeft: theme.spacing(1) / 4\n        },\n    }),\n);\n\nfunction Prediction() {\n    const classes = useStyles();\n    const baseUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_\";\n    const types = {\n        'Confirmed': '#f57c00',\n        'Deaths': '#FC562E',\n        'Recovered': '#388e3c'\n    };\n    const daysMapping = {\n        'Tomorrow': 1,\n        '2 days': 2,\n        '3 days': 3,\n        '1 week': 7\n    }\n\n    const storage = getStorageState()\n\n    const [labels, setLabels] = useState([] as Date[]);\n    const [country, setCountry] = useState(storage.country);\n    const [dataType, setDataType] = useState(storage.type);\n    const [countries, setCountries] = useState([] as string[]);\n    const [days, setDays] = useState(storage.prediction);\n    const [data, setData] = useState([] as any[]);\n    const [lastUpdate, setLastUpdate] = useState('');\n\n    const inputCountryLabel = React.useRef<HTMLLabelElement>(null);\n    const [labelCountryWidth, setLabelCountryWidth] = React.useState(0);\n    const inputDaysLabel = React.useRef<HTMLLabelElement>(null);\n    const [labelDaysWidth, setLabelDaysWidth] = React.useState(0);\n    const inputDataTypeLabel = React.useRef<HTMLLabelElement>(null);\n    const [labelDataTypeWidth, setLabelDataTypeWidth] = React.useState(0);\n\n    React.useEffect(() => {\n        setLabelCountryWidth(inputCountryLabel.current!.offsetWidth);\n        setLabelDaysWidth(inputDaysLabel.current!.offsetWidth);\n        setLabelDataTypeWidth(inputDataTypeLabel.current!.offsetWidth);\n    }, []);\n\n    const handleCountryChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        let newCountry = event.target.value as string;\n        ReactGA.event({\n            category: 'Select',\n            action: 'Country',\n            label: newCountry\n        });\n        saveStorageState({...storage, country: newCountry})\n        setCountry(newCountry);\n    };\n\n    const handleDaysChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        let newRange = event.target.value as number;\n        ReactGA.event({\n            category: 'Select',\n            action: 'Range',\n            label: _.findKey(newRange)\n        });\n        saveStorageState({...storage, prediction: newRange})\n        setDays(newRange);\n    };\n\n    const handleDataTypeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        let newType = event.target.value as string;\n        ReactGA.event({\n            category: 'Select',\n            action: 'Type',\n            label: newType\n        });\n        saveStorageState({...storage, type: newType})\n        setDataType(newType);\n    };\n\n    const loadData = () => {\n        Papa.parse(baseUrl + dataType.toLowerCase() + '_global.csv', {\n            skipEmptyLines: true, header: true, download: true, delimiter: ',',\n            complete: function (results) {\n                let data = results.data;\n                let labels = _.map(_.slice(_.keys(data[0]), 4), (strDate) => moment(strDate).add(1, 'days').toDate())\n                let countries = _.concat(['Worldwide'], _.sortBy(data.map(row => row['Province/State'].length > 0 ? `${row['Country/Region']}/${row['Province/State']}` : row['Country/Region'])));\n                setCountries(countries)\n                setLabels(labels)\n                setData(data)\n            }\n        });\n    }\n\n    const loadLastUpdateTime = () => {\n        octokit.repos.listCommits({\n            owner: 'CSSEGISandData',\n            repo: 'COVID-19'\n        }).then((x: any) => {\n            const latestCommitTime = _.values(x['data'])[0]['commit']['committer']['date']\n            setLastUpdate(moment(latestCommitTime).fromNow());\n        });\n    }\n\n    useEffect(loadData, [dataType]);\n    useEffect(loadLastUpdateTime, []);\n\n    function buildTypeSelect() {\n        return <>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel ref={inputDataTypeLabel}\n                            id=\"select-type-input-id\">Type</InputLabel>\n                <Select\n                    labelId=\"select-type-select-country\"\n                    id=\"select-type-select-id\"\n                    value={dataType}\n                    onChange={handleDataTypeChange}\n                    labelWidth={labelDataTypeWidth}\n                >\n                    {\n                        _.map(_.keys(types), (value, index) => <MenuItem key={index}\n                                                                         value={value}>{value}</MenuItem>)\n                    }\n                </Select>\n            </FormControl>\n        </>\n    }\n\n    function buildCountrySelect() {\n        return <>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel ref={inputCountryLabel}\n                            id=\"select-country-input-id\">Location</InputLabel>\n                <Select\n                    labelId=\"select-country-select-country\"\n                    id=\"select-country-select-id\"\n                    value={country}\n                    onChange={handleCountryChange}\n                    labelWidth={labelCountryWidth}\n                >\n                    {\n                        countries.map((country, index) =>\n                            <MenuItem key={index} value={country}>{country}</MenuItem>)\n                    }\n                </Select>\n            </FormControl>\n        </>\n    }\n\n    function buildDaysSelect() {\n        return <>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel ref={inputDaysLabel}\n                            id=\"select-days-input-id\">Prediction</InputLabel>\n                <Select\n                    labelId=\"select-days-select-country\"\n                    id=\"select-days-select-id\"\n                    value={days}\n                    onChange={handleDaysChange}\n                    labelWidth={labelDaysWidth}\n                >\n                    {\n                        _.map(daysMapping, (values, key) => <MenuItem key={values}\n                                                                      value={values}>{key}</MenuItem>)\n                    }\n                </Select>\n            </FormControl>\n        </>\n    }\n\n    function buildChart() {\n        function getCasesPerCountry(countryToCheck: string): string[] {\n            if (countryToCheck === 'Worldwide') {\n                let casesSelection = _.map(data, x => _.slice(_.values(x), 4) as string[]);\n                return _.filter(_.reduce(casesSelection, (acc, value, index) => {\n                    acc[index] = String(_.sum(_.map(casesSelection, (row => Number(row[index])))));\n                    return acc\n                }, [] as string[]), (value) => Number(value) > 0);\n            } else {\n                return _.slice(_.values(_.find(data, row => {\n                    let isComplexRegion = _.indexOf(countryToCheck, '/') !== -1;\n                    const region = isComplexRegion ? _.split(countryToCheck, '/')[0] : countryToCheck\n                    const state = isComplexRegion ? _.split(countryToCheck, '/')[1] : \"\"\n                    return row['Country/Region'] === region && row['Province/State'] === state\n                })), 4) as string[];\n            }\n        }\n\n        function buildNextDaysLabels(startingDay: Date, days: number): Date[] {\n            return _.reduce(_.range(1, +days + +1), (acc, v, i) => {\n                acc[i] = moment(startingDay || Date.now()).add(i + 1, \"days\").toDate();\n                return acc\n            }, [] as Date[]);\n        }\n\n        function nextDayPrediction(allDays: Dictionary<number>, currentDate: Date) {\n            const predictionSampleSize = 5;\n            const index = _.indexOf(_.keys(allDays), moment(currentDate).format('l'))\n            const lastPart = _.slice(_.values(allDays), index - predictionSampleSize, index + 1);\n            const mults = _.reduce(lastPart, (acc, value, i) => {\n                let previousValue = lastPart[i - 1];\n                if (i > 0 && previousValue > 0 && !isNaN(value) && !isNaN(previousValue)) {\n                    acc[i - 1] = value / previousValue\n                }\n                return acc\n            }, [] as number[])\n            let remove = _.filter(mults, x => !_.isNaN(x));\n            const avgMult = _.mean(remove) || 1\n            return _.reduce(_.range(1, 2), (acc, v, i) => {\n                acc[i] = Math.round(_.reduce(_.range(0, v), (acc) => acc * avgMult, 1) * (_.last(lastPart) || 0));\n                return acc\n            }, [] as number[])[0];\n        }\n\n        function onlyValidNumbers(values: number[]) {\n            return _.filter(values, (v) => v !== undefined);\n        }\n\n        function zipLabelsWithValues(dateLabels: Date[], values: number[]): Dictionary<number> {\n            return _.zipObject(dateLabels.map(x => moment(x).format('l')), values);\n        }\n\n        function buildPrediction(labelsNormalized: Date[], existingData: Dictionary<number>, range: number) {\n            let oneDayPrediction = _.concat([0], _.take(_.map(labelsNormalized, (date: Date) => nextDayPrediction(existingData, date)), _.values(existingData).length));\n            let predictionAcc = zipLabelsWithValues(labelsNormalized, oneDayPrediction);\n            for (let i = 1; i < range; i++) {\n                const targetDay = labelsNormalized[_.findIndex(_.values(predictionAcc), v => v === undefined) - 1]\n                const nextDayPredicted = nextDayPrediction(predictionAcc, targetDay)\n                const newPredictionSerie = _.concat(onlyValidNumbers(_.values(predictionAcc)), [nextDayPredicted]);\n                predictionAcc = zipLabelsWithValues(labelsNormalized, newPredictionSerie)\n            }\n            return _.values(predictionAcc);\n        }\n\n        function calculateAccuracy(dataExistingPlot: number[], dataPredictedPlot: number[], days: number) {\n            function mismatchPercentage(existing: number, predicted: number) {\n                if (existing === predicted) {\n                    return 0;\n                } else if (existing === 0 || predicted === 0) {\n                    return (existing + predicted) * 100\n                } else {\n                    const biggerVal = _.max([existing, predicted])!;\n                    const smallerVal = _.min([existing, predicted])!;\n                    return Math.abs(1 - biggerVal / smallerVal) * 100;\n                }\n            }\n\n            const deviationAgeDays = 7;\n            const deviationsAll = _.zipWith(dataExistingPlot, dataPredictedPlot, mismatchPercentage);\n            const rangeStart = deviationsAll.length - days - deviationAgeDays < 0 ? 0 : deviationsAll.length - days - deviationAgeDays;\n            const deviations = _.slice(deviationsAll, rangeStart, rangeStart + deviationAgeDays).filter(x => !isNaN(x));\n            const acc = _.round(100 - _.mean(deviations), 1);\n            if (acc <= 0) {\n                return 1;\n            } else if (acc >= 100) {\n                return 99;\n            } else {\n                return acc;\n            }\n        }\n\n        const labelsNormalized = _.concat(labels, buildNextDaysLabels(_.last(labels)!, days));\n        const dataPerCountry = getCasesPerCountry(country).map(Number);\n        const existingData = zipLabelsWithValues(labels, dataPerCountry);\n        const prediction = buildPrediction(labelsNormalized, existingData, days)\n        let indexOfFirstPacient = _.findIndex(_.values(existingData), (x) => x > 0) - 1\n        indexOfFirstPacient = indexOfFirstPacient < 0 ? 0 : indexOfFirstPacient\n        let dataExistingPlot = _.values(existingData).slice(indexOfFirstPacient);\n        let dataPredictedPlot = _.values(prediction).slice(indexOfFirstPacient);\n        let labelsPlot = labelsNormalized.slice(indexOfFirstPacient).map(date => moment(date).format('ll'));\n        const accuracy = calculateAccuracy(dataExistingPlot, dataPredictedPlot, days);\n        if (accuracy < 60) {\n            dataPredictedPlot = dataPredictedPlot.map(_ => NaN);\n        }\n        const predictionTomorrow = _.findLast(buildPrediction(labelsNormalized, existingData, 1), (x) => x !== undefined);\n        // @ts-ignore\n        const color = types[dataType];\n        const titleTooltip = \"The accuracy calculation is based on a comparison of the last 7 days prediction and actual values of those days\"\n        return data.length\n            ? (\n                <>\n                    <Grid item>\n                        <Grid item container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                            {accuracy > 60\n                                ? <>\n                                    <Grid item>\n                                        <Typography variant={\"caption\"}>\n                                            {ReactHtmlParser(`There is <strong>${accuracy}%</strong> chance to have <strong>${predictionTomorrow}</strong> ${_.lowerCase(dataType)} tomorrow (${country})`)}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Tooltip title={titleTooltip} arrow\n                                                 TransitionComponent={Fade}>\n                                            <InfoRoundedIcon className={classes.infoIcon}/>\n                                        </Tooltip>\n                                    </Grid>\n                                </>\n                                : <>\n                                    <Typography variant={\"caption\"}>\n                                        {ReactHtmlParser(`${country} does not have enough <strong>${_.lowerCase(dataType)}</strong> cases for reliable prediction`)}\n                                    </Typography>\n                                </>}\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <PredictionChart labelsPlot={labelsPlot} dataExistingPlot={dataExistingPlot}\n                                         dataPredictedPlot={dataPredictedPlot} country={country}\n                                         color={color}/>\n                    </Grid>\n                </>\n            )\n            : '';\n    }\n\n    function getFooter() {\n        return <Typography variant={\"caption\"}>\n            <ReactGA.OutboundLink\n                eventLabel=\"Data source\" target=\"_blank\"\n                to=\"https://github.com/CSSEGISandData/COVID-19\">\n                Data source\n            </ReactGA.OutboundLink>\n            {' • '}\n            <ReactGA.OutboundLink\n                eventLabel=\"Github\" target=\"_blank\"\n                to=\"https://github.com/ValeryP/coronavirus-spread\">\n                Github\n            </ReactGA.OutboundLink>\n        </Typography>;\n    }\n\n    function buildLastUpdateLabel() {\n        return <Typography variant={\"caption\"}>{`Latest update ${lastUpdate}`}</Typography>;\n    }\n\n    return (\n        <Grid\n            container direction=\"column\" justify=\"center\" alignItems=\"center\"\n            className={classes.root}>\n            <Grid item>\n                {buildTypeSelect()}\n                {buildCountrySelect()}\n                {buildDaysSelect()}\n            </Grid>\n            <Grid item container direction=\"column\" className={classes.chart}>\n                {buildChart()}\n            </Grid>\n            <Grid item className={classes.footer}>{getFooter()}</Grid>\n            {lastUpdate &&\n            <Grid item className={classes.latestUpdate}>{buildLastUpdateLabel()}</Grid>}\n        </Grid>\n    )\n}\n\nexport default Prediction;\n","import React from 'react';\n\nfunction Dashboard() {\n    return <>\n        <iframe title={\"Dashboard\"}\n                src=\"https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6\"\n                style={{width: '100%', height: '100vh', border: 0}}/>\n    </>\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport {Grid} from \"@material-ui/core\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            marginTop: theme.spacing(1),\n        }\n    })\n);\n\nfunction DailyNewDeaths() {\n    const classes = useStyles();\n    return <>\n        <Grid container justify=\"space-evenly\" className={classes.root}>\n            <Grid item xs={6}>\n                <iframe title={\"DailyNewDeaths1\"}\n                        src=\"https://ourworldindata.org/grapher/daily-deaths-covid-19\"\n                        style={{width: '100%', height: 600, border: 0}}/>\n            </Grid>\n            <Grid item xs={6}>\n                <iframe title={\"DailyNewDeaths2\"}\n                        src=\"https://ourworldindata.org/grapher/total-deaths-covid-19\"\n                        style={{width: '100%', height: 600, border: 0}}/>\n            </Grid>\n\n        </Grid>\n    </>\n}\n\nexport default DailyNewDeaths;\n","import React from 'react';\nimport {Grid} from \"@material-ui/core\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            marginTop: theme.spacing(1),\n        }\n    })\n);\n\nfunction DeathsPerMillion() {\n    const classes = useStyles();\n    return <>\n        <Grid container justify=\"space-evenly\" className={classes.root}>\n            <Grid item xs={5}>\n                <iframe title={\"DeathsPerMillion1\"}\n                        src=\"https://ourworldindata.org/grapher/total-covid-deaths-per-million\"\n                        style={{width: '100%', height: 600, border: 0}}/>\n            </Grid>\n            <Grid item xs={7}>\n                <iframe title={\"DeathsPerMillion2\"}\n                        src=\"https://ourworldindata.org/grapher/new-covid-deaths-per-million\"\n                        style={{width: '100%', height: 600, border: 0}}/>\n            </Grid>\n\n        </Grid>\n    </>\n}\n\nexport default DeathsPerMillion;\n","import React from 'react';\nimport {Grid} from \"@material-ui/core\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            marginTop: theme.spacing(1),\n        },\n        rootBottom: {\n            marginTop: theme.spacing(1),\n            marginBottom: theme.spacing(12),\n        }\n    })\n);\n\nfunction TestsPerCountry() {\n    const classes = useStyles();\n    return <>\n        <Grid container direction=\"column\" className={classes.root}>\n            <Grid container item justify=\"space-evenly\" className={classes.root}>\n                <Grid item xs={6}>\n                    <iframe title={\"TestsPerCountry1\"}\n                            src=\"https://ourworldindata.org/grapher/tests-vs-confirmed-cases-covid-19\"\n                            style={{width: '100%', height: 600, border: 0}}/>\n                </Grid>\n                <Grid item xs={6}>\n                    <iframe title={\"TestsPerCountry2\"}\n                            src=\"https://ourworldindata.org/grapher/covid-19-tests-country\"\n                            style={{width: '100%', height: 600, border: 0}}/>\n                </Grid>\n\n            </Grid>\n            <Grid container item justify=\"space-evenly\" className={classes.rootBottom}>\n                <Grid item xs={6}>\n                    <iframe title={\"TestsPerCountry3\"}\n                            src=\"https://ourworldindata.org/grapher/tests-vs-confirmed-cases-covid-19-per-million\"\n                            style={{width: '100%', height: 600, border: 0}}/>\n                </Grid>\n                <Grid item xs={6}>\n                    <iframe title={\"TestsPerCountry4\"}\n                            src=\"https://ourworldindata.org/grapher/covid19-tests-per-million-people\"\n                            style={{width: '100%', height: 600, border: 0}}/>\n                </Grid>\n            </Grid>\n        </Grid>\n    </>\n}\n\nexport default TestsPerCountry;\n","import React from 'react';\nimport {Grid} from \"@material-ui/core\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            marginTop: theme.spacing(1),\n        },\n        rootBottom: {\n            marginTop: theme.spacing(1),\n            marginBottom: theme.spacing(12),\n        }\n    })\n);\n\nfunction ConfirmedPerCountry() {\n    const classes = useStyles();\n    return <>\n        <Grid container direction=\"column\" className={classes.root}>\n            <Grid container item justify=\"space-evenly\" className={classes.root}>\n                <Grid item xs={6}>\n                    <iframe title={\"ConfirmedPerCountry1\"}\n                            src=\"https://ourworldindata.org/grapher/total-cases-covid-19\"\n                            style={{width: '100%', height: 600, border: 0}}/>\n                </Grid>\n                <Grid item xs={6}>\n                    <iframe title={\"ConfirmedPerCountry2\"}\n                            src=\"https://ourworldindata.org/grapher/daily-cases-covid-19\"\n                            style={{width: '100%', height: 600, border: 0}}/>\n                </Grid>\n\n            </Grid>\n            <Grid container item justify=\"space-evenly\" className={classes.rootBottom}>\n                <Grid item xs={6}>\n                    <iframe title={\"ConfirmedPerCountry3\"}\n                            src=\"https://ourworldindata.org/grapher/total-confirmed-cases-of-covid-19-per-million-people\"\n                            style={{width: '100%', height: 600, border: 0}}/>\n                </Grid>\n                <Grid item xs={6}>\n                    <iframe title={\"ConfirmedPerCountry4\"}\n                            src=\"https://ourworldindata.org/grapher/new-covid-cases-per-million?year=59\"\n                            style={{width: '100%', height: 600, border: 0}}/>\n                </Grid>\n            </Grid>\n        </Grid>\n    </>\n}\n\nexport default ConfirmedPerCountry;\n","import React from 'react';\nimport {Grid} from \"@material-ui/core\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            margin: theme.spacing(1),\n        }\n    })\n);\n\nfunction SpeedOfGrowth() {\n    const classes = useStyles();\n    return <>\n        <Grid container className={classes.root}>\n            <iframe title={\"SpeedOfGrowth\"}\n                    src=\"https://ourworldindata.org/grapher/covid-confirmed-cases-since-100th-case\"\n                    style={{width: '99%', height: 600, border: 0}}/>\n        </Grid>\n    </>\n}\n\nexport default SpeedOfGrowth;\n","import React from 'react';\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {Container, Divider} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            paddingLeft: 200,\n            paddingRight: 200,\n        },\n        img: {\n            margin: theme.spacing(2),\n            marginTop: theme.spacing(4),\n            marginBottom: theme.spacing(4),\n            width: '100%'\n        }\n    })\n);\n\nfunction SymptomsAndFatality() {\n    const classes = useStyles();\n    return <>\n        <Container className={classes.root}>\n            <img className={classes.img} alt={\"\"}\n                 src={'https://ourworldindata.org/uploads/2020/03/Coronavirus-Symptoms-%E2%80%93-WHO-joint-mission-2-1536x823.png'}/>\n            <Divider/>\n            <img className={classes.img} alt={\"\"}\n                 src={'https://ourworldindata.org/uploads/2020/03/Severity-of-coronavirus-cases-in-China-1-1536x1322.png'}/>\n            <Divider/>\n            <img className={classes.img} alt={\"\"}\n                 src={'https://ourworldindata.org/uploads/2020/03/Coronavirus-CFR-by-age-in-China-1.png'}/>\n            <Divider/>\n            <img className={classes.img} alt={\"\"}\n                 src={'https://ourworldindata.org/uploads/2020/03/Coronavirus-CFR-by-health-condition-in-China.png'}/>\n            <Divider/>\n            <img className={classes.img} alt={\"\"}\n                 src={'https://ourworldindata.org/uploads/2020/03/Covid-19-CFR-by-age-vs.-US-Seasonal-Flu-3.png'}/>\n        </Container>\n    </>\n}\n\nexport default SymptomsAndFatality;\n","import React from 'react';\n\nfunction EpidemicCalculator() {\n    return <>\n        <iframe title={\"EpidemicCalculator\"}\n                src=\"https://gabgoh.github.io/COVID/index.html?CFR=0.051&D_hospital_lag=5&D_incbation=5.2&D_infectious=2.9&D_recovery_mild=11.1&D_recovery_severe=28.6&I0=6&InterventionAmt=0.47&InterventionTime=20.137399999999992&P_SEVERE=0.1446&R0=2.49&Time_to_death=21.25&logN=17.51\"\n                style={{width: '100%', height: '100vh', border: 0}}/>\n    </>\n}\n\nexport default EpidemicCalculator;\n","import React from 'react';\nimport {AppBar, Tab, Tabs} from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport DailyNewDeaths from \"./DailyNewDeaths\";\nimport DeathsPerMillion from \"./DeathsPerMillion\";\nimport TestsPerCountry from \"./TestsPerCountry\";\nimport ConfirmedPerCountry from \"./ConfirmedPerCountry\";\nimport SpeedOfGrowth from \"./SpeedOfGrowth\";\nimport SymptomsAndFatality from \"./SymptomsAndFatality\";\nimport ReactGA from \"react-ga\";\nimport {TabPanel, tabsUseStyles} from \"./App\";\nimport EpidemicCalculator from \"./EpidemicCalculator\";\nimport {getStorageState, saveStorageState} from \"./Storage\";\n\nfunction Analysis() {\n    const classes = tabsUseStyles();\n\n    const storage = getStorageState()\n\n    const [value, setValue] = React.useState(storage.tabAnalysis);\n\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n        setValue(newValue);\n    };\n\n    function handleTabClick(name: string, index: number) {\n        ReactGA.event({\n            category: 'Click',\n            action: 'Tab',\n            label: name\n        });\n        saveStorageState({...storage, tabAnalysis: index})\n    }\n\n    function buildTabTitle(name: string, index: number, selected: number) {\n        return <Tab onClick={() => handleTabClick(name, index)} label={name}\n                    className={index === selected ? classes.tabSelected : classes.tabDefault}\n                    {...{\n                        id: `simple-tab-${index}`,\n                        'aria-controls': `simple-tabpanel-${index}`,\n                    }} />\n    }\n\n    const tabs = ['Daily new deaths', 'Deaths per million', 'Tests by country',\n        'Daily new confirmed', 'Speed of growth', 'Epidemic Calculator', 'Symptoms and fatality']\n\n    return <>\n        <AppBar position=\"sticky\">\n            <Tabs value={value} onChange={handleChange} variant=\"scrollable\" scrollButtons=\"auto\">\n                {_.map(tabs, (v, ind) => buildTabTitle(v, ind, value))}\n            </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n            <DailyNewDeaths/>\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n            <DeathsPerMillion/>\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n            <TestsPerCountry/>\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n            <ConfirmedPerCountry/>\n        </TabPanel>\n        <TabPanel value={value} index={4}>\n            <SpeedOfGrowth/>\n        </TabPanel>\n        <TabPanel value={value} index={5}>\n            <EpidemicCalculator/>\n        </TabPanel>\n        <TabPanel value={value} index={6}>\n            <SymptomsAndFatality/>\n        </TabPanel>\n    </>\n}\n\nexport default Analysis;\n","import React from 'react';\nimport {createStyles, makeStyles, Theme, withStyles, WithStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport emojiFlags from 'emoji-flags';\nimport _ from \"lodash\";\nimport {CircularProgress, Fade, Grid, Slide, TextField, Zoom} from \"@material-ui/core\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {TransitionProps} from \"@material-ui/core/transitions\";\nimport {UserTab} from \"./Storage\";\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n})\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n        textSuccess: {\n            color: theme.palette.success.dark\n        },\n        textError: {\n            color: theme.palette.error.dark\n        },\n        saveButton: {\n            color: theme.palette.primary.dark,\n        },\n    }),\n);\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n    id: string;\n    children: React.ReactNode;\n    onClose: () => void;\n}\n\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n    const {children, classes, onClose, ...other} = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon/>\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme: Theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme: Theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\nconst Transition = React.forwardRef<unknown, TransitionProps>(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport interface Country {\n    name: string,\n    flag: string\n}\n\nconst countryToEmojiMap = _.map(emojiFlags.data, ({name, emoji}) => ({\n    name: name,\n    flag: emoji\n} as Country))\n\nexport default function AddTabDialog({isOpen, editTab, handleSave, handleClose, handleEdit, handleRemove}: { isOpen: boolean, editTab: UserTab, handleSave: (url: string, country: Country) => void, handleClose: () => void, handleRemove: (tab: UserTab) => void, handleEdit: (tab: UserTab) => void }) {\n    const classes = useStyles();\n    const [country, setCountry] = React.useState(editTab ? {\n        name: editTab.country,\n        flag: editTab.flag\n    } as Country : undefined);\n\n    const [validUrl, setValidUrl] = React.useState(!!editTab);\n    const [url, setUrl] = React.useState(editTab ? editTab.url : undefined);\n    const [loading, setLoading] = React.useState();\n\n    function resetState() {\n        setCountry(undefined)\n        setValidUrl(false)\n        setUrl(undefined)\n        setLoading(undefined)\n    }\n\n    function onDialogClosed() {\n        handleClose()\n        resetState();\n    }\n\n    function onSaveClicked() {\n        if (!!editTab) {\n            handleEdit({...editTab, url: url!!, country: country?.name!!, flag: country?.flag!!})\n        } else {\n            handleSave(url!!, country!!);\n        }\n        resetState();\n    }\n\n    function onRemoveClicked() {\n        handleRemove(editTab);\n        resetState();\n    }\n\n    function handleCountrySelected({target: {value}}: any) {\n        setCountry(_.find(countryToEmojiMap, (v: Country) => v.name === value))\n    }\n\n    function buildAutocomplete() {\n        return <Autocomplete\n            id=\"country-select\"\n            style={{width: 300}}\n            options={countryToEmojiMap}\n            defaultValue={country}\n            autoHighlight\n            onSelect={handleCountrySelected}\n            getOptionLabel={option => option.name}\n            renderOption={(c: Country) => (<><span>{c.flag}</span>{c.name}</>)}\n            renderInput={params => (\n                <TextField {...params}\n                           label=\"Choose your country\" variant=\"outlined\"\n                           inputProps={{...params.inputProps, autoComplete: 'new-password'}}/>\n            )}\n        />;\n    }\n\n    function handleUrlChange({target: {value}}: any) {\n        const corsProxy = 'https://cors-anywhere.herokuapp.com/'\n        setLoading(true)\n        setUrl(value)\n        fetch(corsProxy + value, {method: 'GET'})\n            .then((res) => {\n                setValidUrl(res.ok)\n            }, (err) => {\n                console.error(err)\n            })\n            .then(() => setTimeout(() => setLoading(false), 2000))\n    }\n\n    return (\n        <Dialog onClose={onDialogClosed} aria-labelledby=\"customized-dialog-title\" open={isOpen}\n                TransitionComponent={Transition} fullWidth>\n            <DialogTitle id=\"customized-dialog-title\" onClose={onDialogClosed}>\n                {editTab ? \"Edit\" : \"Add\"} your website\n            </DialogTitle>\n            <DialogContent dividers style={{minHeight: 200}}>\n                <Grid container direction={\"column\"} alignItems=\"center\" justify=\"center\"\n                      style={{minHeight: 200}} spacing={2}>\n                    <Typography variant={\"caption\"} style={{margin: 16, textAlign: 'center'}}>\n                        Each country has its own country website with more detailed data.\n                        You can add the URL of your favorite website and it will be saved as a\n                        bookmark in the top bar of this page.\n                    </Typography>\n                    <Grid item xs container spacing={1} justify={\"center\"}>\n                        {!!country && <>\n                            <Grid item xs={2} style={{textAlign: 'end'}}>\n                                <Zoom in={!!country}>\n                                    <Typography variant={\"h3\"}>\n                                        <span aria-label={\"flag \" + country.name} role={\"img\"}>\n                                            {country?.flag}\n                                        </span>\n                                    </Typography>\n                                </Zoom>\n                            </Grid>\n                        </>}\n                        <Grid item>\n                            {buildAutocomplete()}\n                        </Grid>\n                    </Grid>\n                    {!!country &&\n                    <Grid item style={{width: '100%'}}>\n                        <TextField fullWidth variant=\"outlined\" value={url}\n                                   label=\"Insert URL of your website\"\n                                   onChange={handleUrlChange}/>\n                    </Grid>}\n                    {loading &&\n                    <Fade in={loading} unmountOnExit\n                          style={{transitionDelay: loading ? '300ms' : '0ms'}}>\n                        <Grid item spacing={1} container justify={\"center\"}\n                              style={{width: '100%'}}>\n                            <Grid item xs={1} style={{textAlign: 'end'}}>\n                                <CircularProgress size={20}/>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant={\"body1\"}>Checking inserted URL...</Typography>\n                            </Grid>\n                        </Grid>\n                    </Fade>}\n                    {!loading && !!url && (validUrl\n                        ? <Grid item style={{width: '100%'}} container justify={\"center\"}>\n                            <Typography variant={\"body1\"} className={classes.textSuccess}>\n                                <span aria-label={\"happy\"} role={\"img\"}>😊</span>\n                                Great. URL is valid!\n                            </Typography>\n                        </Grid>\n                        : <Grid item style={{width: '100%'}} container justify={\"center\"}>\n                            <Typography variant={\"body1\"} className={classes.textError}>\n                                <span aria-label={\"sad\"} role={\"img\"}>😿</span>\n                                Inserted URL is not valid. Try another one, please.\n                            </Typography>\n                        </Grid>)}\n                </Grid>\n            </DialogContent>\n            {validUrl && !loading &&\n            <DialogActions>\n                {!!editTab &&\n                <Button onClick={onRemoveClicked} className={classes.saveButton}>Remove</Button>}\n                <Button onClick={onSaveClicked} className={classes.saveButton}\n                        variant=\"contained\" color={\"secondary\"}>Save</Button>\n            </DialogActions>}\n        </Dialog>\n    );\n}\n","import React from 'react';\n\nfunction GenericTab({url}: { url: string }) {\n    return <>\n        <iframe title={\"GenericTab\"} src={url} style={{width: '100%', height: '100vh', border: 0}}/>\n    </>\n}\n\nexport default GenericTab;\n","import React, {useEffect} from 'react';\nimport Prediction from \"./Prediction\";\nimport {AppBar, Box, IconButton, Tab, Tabs, Typography} from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport ReactGA from \"react-ga\";\nimport Dashboard from \"./Dashboard\";\nimport Analysis from \"./Analysis\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\nimport AddTabDialog, {Country} from \"./AddTabDialog\";\nimport moment from \"moment\";\nimport GenericTab from \"./GenericTab\";\nimport {Onboarding, Onboardings} from \"./Onboarding\";\nimport {getStorageState, saveStorageState, shouldWatchOboarding, UserTab} from \"./Storage\";\n\nexport interface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nexport function TabPanel(props: TabPanelProps) {\n    const {children, value, index, ...other} = props;\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={0}>{children}</Box>}\n        </Typography>\n    );\n}\n\nexport const tabsUseStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        tabDefault: {\n            color: theme.palette.primary.contrastText,\n            backgroundColor: theme.palette.primary.main\n        },\n        tabSelected: {\n            color: theme.palette.secondary.main,\n        }\n    }),\n);\n\nfunction App() {\n    const classes = tabsUseStyles();\n\n    const [mainTab, setMainTab] = React.useState(getStorageState().tabMain);\n    const [userTabs, setUserTabsRaw] = React.useState(getStorageState().userTabs);\n    const [editTab, setEditTab] = React.useState();\n    const [showAddTabDialog, setShowAddTabDialog] = React.useState(false);\n\n    const userTabsTitles = _.map(userTabs, 'flag')\n    const tabsDefault = ['Dashboard', 'Analysis', 'Prediction']\n    const tabs = [...tabsDefault, ...userTabsTitles]\n\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n        setMainTab(newValue);\n    };\n\n    const handleAddButtonClick = () => {\n        setShowAddTabDialog(true)\n    };\n\n    const handleAddTab = (url: string, country: Country) => {\n        const newTab = {\n            index: userTabs.length,\n            country: country.name,\n            flag: country.flag,\n            url: url,\n            timestamp: moment().unix()\n        } as UserTab\n        const userTabsObj = _.concat(userTabs, [newTab]);\n        saveStorageState({...getStorageState(), userTabs: userTabsObj})\n        setUserTabsRaw(userTabsObj)\n        setMainTab(tabs.length);\n        handleAddTabClose()\n    };\n\n    const handleEditTab = (tab: UserTab) => {\n        const index = _.findIndex(userTabs, (v) => v.index === tab.index);\n        const newTabs = _.concat(_.slice(userTabs, 0, index), [tab], _.slice(userTabs, index + 1));\n        saveStorageState({...getStorageState(), userTabs: newTabs})\n        setUserTabsRaw(newTabs)\n        setMainTab(tabsDefault.length + index);\n        handleAddTabClose()\n    };\n\n    const handleRemoveTab = (tab: UserTab) => {\n        const newTabs = userTabs.filter(item => item.index !== tab.index)\n        saveStorageState({...getStorageState(), userTabs: newTabs})\n        setUserTabsRaw(newTabs)\n        setMainTab(tabsDefault.length);\n        handleAddTabClose()\n    };\n\n    const handleAddTabClose = () => {\n        setShowAddTabDialog(false);\n        setEditTab(undefined);\n    };\n\n    function handleTabClick(event: React.MouseEvent<HTMLDivElement, MouseEvent>, name: string, index: number) {\n        if (event.type === 'click') {\n            ReactGA.event({\n                category: 'Click',\n                action: 'Tab',\n                label: name\n            });\n            saveStorageState({...getStorageState(), tabMain: index})\n        } else if (event.type === 'contextmenu') {\n            event.preventDefault();\n            setEditTab(userTabs[index - tabsDefault.length])\n            setShowAddTabDialog(true)\n        }\n    }\n\n    function buildTabTitle(name: string, index: number, selected: number) {\n        const isUserTab = index > tabsDefault.length - 1;\n        const userTabsStyles = isUserTab ? {fontSize: '1.3rem', minWidth: 64} : {};\n        return <Tab\n            onContextMenu={event => handleTabClick(event, name, index)}\n            onClick={event => handleTabClick(event, name, index)}\n            className={index === selected ? classes.tabSelected : classes.tabDefault}\n            label={name} style={{...userTabsStyles}} key={index}\n            {...{\n                className: `simple-tab-${index}`, id: `simple-tab-${index}`,\n                'aria-controls': `simple-tabpanel-${index}`,\n            }}/>;\n    }\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [])\n\n    return <>\n        <AppBar position=\"sticky\">\n            <Tabs value={mainTab} onChange={handleChange} variant=\"scrollable\" scrollButtons=\"auto\">\n                {_.map(tabs, (v, ind) => buildTabTitle(v, ind, mainTab))}\n                <IconButton className={`simple-tab-last`} aria-haspopup=\"true\" color=\"inherit\"\n                            onClick={handleAddButtonClick}>\n                    <AddRoundedIcon/>\n                </IconButton>\n            </Tabs>\n        </AppBar>\n        <TabPanel value={mainTab} index={0} key={0}>\n            <Dashboard/>\n        </TabPanel>\n        <TabPanel value={mainTab} index={1} key={1}>\n            <Analysis/>\n        </TabPanel>\n        <TabPanel value={mainTab} index={2} key={2}>\n            <Prediction/>\n        </TabPanel>\n        {_.map(userTabs, ({url}, i) =>\n            <TabPanel value={mainTab} index={tabsDefault.length + i} key={tabsDefault.length + i}>\n                <GenericTab url={url}/>\n            </TabPanel>)}\n        {showAddTabDialog &&\n        <AddTabDialog isOpen={showAddTabDialog}\n                      editTab={editTab}\n                      handleSave={handleAddTab}\n                      handleEdit={handleEditTab}\n                      handleClose={handleAddTabClose}\n                      handleRemove={handleRemoveTab}/>\n        }\n        <Onboarding run={shouldWatchOboarding(Onboardings.MAIN)} type={Onboardings.MAIN}/>\n        <Onboarding run={shouldWatchOboarding(Onboardings.USER_TABS_ACTIONS)}\n                    type={Onboardings.USER_TABS_ACTIONS}/>\n    </>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport ReactGA from 'react-ga';\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\n\nReactGA.initialize(\"UA-160685541-1\");\nReactGA.pageview(window.location.pathname);\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#354955',\n        },\n        secondary: {\n            main: '#F7A942',\n        },\n    },\n});\nReactDOM.render(<ThemeProvider theme={theme}><App/></ThemeProvider>,\n    document.getElementById('root'));\n\ndocument.body.style.margin = '0';\n"],"sourceRoot":""}